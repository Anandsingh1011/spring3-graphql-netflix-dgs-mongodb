
type Query {

	movies(
		searchMovie: MovieInput
		
		sortBy: SortBy = _strtDt
		subTitle: Boolean = false
		
		"""
		Match and filter Movie based on member fields.
		"""
		match: [Match!]
		
		"""
		Number of Movie to be returned in one single page
		
		Default - 25
		"""
		size: Int = 25
		"""
		Page number to be returned.	
		
		Default - 1
		"""
		page: Int = 1
		
		) :[Movie!]
	metaData: MetaData
}

input MovieInput{
	title: String
	year: String
	yearStart: String
	yearEnd: String
	id: String
	type: String
}

enum Match{
	TAXFREE
	BANNED
}

"""
List of Movie fields that can be used to sort the returned response. User must send only the fields listed in this enumeration for the input param 'sortBy' in the query request.

All fields starting with underscore (_) indicate descending order of the respective fields.

Default - (_clmStrtDt - descending order)
"""

enum SortBy{
	strtDt
	_strtDt 
	endDt
	_endDt
}

type MetaData{
	page: Page
}

type Page{
	"""
	Total Movie returned in a given Page (Default - 25 ). User can request for a particular page by sending the 'size' param in the query request. 
	"""
	size: Int!
	"""
	Total Movie exist for a given query request.
	"""
	totalElements: Int!
	"""
	Total pages exist for a given request. This is calculated based on the 'size' param in the request/default value.
	"""
	totalPages: Int!
	"""
	Current page number
	"""
	number: Int!
}


type Movie{
	id: String
	movieId: String
	plot: String
	year: String
	title: String
	imdb: [String]
	fullplot: String
	comments: [Comments]
}

type Comments{
	id: String
	name: String
	email: String
	movie_id: String
	text: String
	
}

